name: Meta Bot Twice Daily

on:
  schedule:
    - cron: '0 8,20 * * *'  # 8 AM and 8 PM UTC
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  run-bot:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install Pillow pillow-avif-plugin
          python -m playwright install --with-deps

      - name: Run scraper
        id: scrape
        run: |
          echo "=== Current Directory ==="
          pwd
          echo "=== Directory Contents Before ==="
          ls -la
          python scrape.py
          echo "=== Directory Contents After ==="
          ls -la

      - name: Verify database
        id: verify
        run: |
          echo "=== Current Directory ==="
          pwd
          echo "=== Directory Contents ==="
          ls -la
          echo "=== Database File Details ==="
          if [ -f "all_guns_database.json" ]; then
            echo "✅ Database file exists"
            ls -la all_guns_database.json
            echo "=== File Contents Preview ==="
            head -n 5 all_guns_database.json
            echo "=== File Permissions ==="
            stat all_guns_database.json
          else
            echo "❌ Database file not found!"
            exit 1
          fi

      - name: Create artifact directory
        run: |
          mkdir -p artifacts
          cp all_guns_database.json artifacts/
          echo "=== Artifacts Directory Contents ==="
          ls -la artifacts/

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: gun-database
          path: artifacts/all_guns_database.json
          retention-days: 30
          if-no-files-found: error

      - name: Create summary
        if: success() && steps.verify.outcome == 'success'
        run: |
          echo "## 🔫 Gun Database Update" >> $GITHUB_STEP_SUMMARY
          echo "**Timestamp:** $(date)" >> $GITHUB_STEP_SUMMARY
          python -c 'import json; f=open("all_guns_database.json"); db=json.load(f); print(f"**Total Guns:** {db[\"total_guns\"]}"); print(f"**Last Updated:** {db[\"last_updated\"]}"); print("**Categories:**"); [print(f"- {cat.replace(\"_\", \" - \")}: {len(guns)} weapons") for cat, guns in db[\"categories\"].items()]' >> $GITHUB_STEP_SUMMARY
