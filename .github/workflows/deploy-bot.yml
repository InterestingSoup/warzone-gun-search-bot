name: 🤖 Deploy Discord Search Bot

on:
  # Manual trigger with option to specify workflow run
  workflow_dispatch:
    inputs:
      run_id:
        description: 'Workflow run ID to download artifact from (leave empty for latest)'
        required: false
        type: string

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: 📂 Checkout repository
      uses: actions/checkout@v4
      
    - name: 🐍 Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: 📦 Install Discord bot dependencies
      run: |
        pip install -r discord_bot_requirements.txt
        
    - name: 💾 Download latest gun database artifact
      uses: actions/download-artifact@v4
      with:
        name: gun-database
        run-id: ${{ github.event.inputs.run_id }}
        github-token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: 📊 Verify downloaded database
      run: |
        ls -la all_guns_database.json
        python test_database.py
        
    - name: 🤖 Test Discord bot (dry run)
      env:
        DISCORD_SEARCH_BOT_TOKEN: "dummy_token_for_testing"
      run: |
        echo "✅ Bot would start with database containing:"
        python -c "
import json
with open('all_guns_database.json', 'r') as f:
    db = json.load(f)
print(f'�� Total weapons: {db["total_guns"]}')
print(f'📅 Database updated: {db["last_updated"]}')
print('🎯 Ready for Discord deployment!')
        "
        
    # Uncomment and configure this step for actual deployment
    # - name: 🚀 Deploy to production
    #   env:
    #     DISCORD_SEARCH_BOT_TOKEN: ${{ secrets.DISCORD_SEARCH_BOT_TOKEN }}
    #   run: |
    #     # Add your deployment commands here
    #     # For example: docker build, push to server, etc.
    #     echo "Deploy bot to your infrastructure" 